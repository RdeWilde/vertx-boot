plugins {
  id 'java-library'
  id 'maven-publish'
  id 'com.github.ben-manes.versions' version '0.17.0'
}

repositories {
  mavenCentral()
  maven {
    url 'https://oss.sonatype.org/content/repositories/snapshots/'
  }
}

group 'io.github.jponge'
version '0.0.2-SNAPSHOT'

dependencies {
  api 'io.vertx:vertx-core:3.5.2.CR1'
  implementation 'com.typesafe:config:1.3.3'

  testImplementation 'io.vertx:vertx-junit5:3.5.2.CR1'
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.2.0'
  testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.2.0'
}

jar {
  manifest {
    attributes(
      'Implementation-Title': project.name,
      'Implementation-Version': project.version)
  }
}

test {
  useJUnitPlatform()
}

publishing {
  publications {
    vertxBoot(MavenPublication) {

      from components.java

      artifact sourceJar {
        classifier "sources"
      }

      artifact javadocJar {
        classifier 'javadoc'
      }

      pom.withXml {
        asNode().children().last() + {
          resolveStrategy = Closure.DELEGATE_FIRST
          name 'Vert.x Boot'
            description 'A Vert.x verticle to boot an application from HOCON configuration.'
          url 'https://github.com/jponge/vertx-boot'
          licenses {
            license {
              name 'MIT License'
              url 'https://opensource.org/licenses/MIT'
            }
          }
          developers {
            developer {
              id 'jponge'
              name 'Julien Ponge'
              email 'julien.ponge@gmail.com'
              url 'https://julien.ponge.org/'
            }
          }
          scm {
            connection 'scm:git:git://github.com/jponge/vertx-boot.git'
            developerConnection 'scm:git:ssh://github.com/jponge/vertx-boot.git'
            url 'https://github.com/jponge/vertx-boot/tree/master'
          }
        }
      }
    }
  }
  repositories {
    maven {
      url 'https://api.bintray.com/maven/jponge/vertx-boot/vertx-boot'
      credentials {
        username project.hasProperty('bintrayRepoUsername') ? bintrayRepoUsername : System.getenv('bintrayRepoUsername')
        password project.hasProperty('bintrayRepoPassword') ? bintrayRepoPassword : System.getenv('bintrayRepoPassword')
      }
    }
  }
}

task sourceJar(type: Jar) {
  from sourceSets.main.allJava
}

task javadocJar (type: Jar, dependsOn: javadoc) {
  from javadoc.destinationDir
}

task wrapper(type: Wrapper) {
  gradleVersion = '4.7'
}
